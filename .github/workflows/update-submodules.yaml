name: Update Submodules

# References
# https://zenn.dev/ymmmtym/articles/dc741561759a49
# https://qiita.com/keiswe/items/7bcb29ea6c29d710b64b

on:
  schedule:
    # 日本時間 午前9時に実行
    - cron: '0 0 * * *'
  push:
    branches: ['main']
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update-submodules:
    runs-on: ubuntu-latest

    steps:
    # STEP 1: リポジトリのチェックアウト
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: 'recursive'
        token: ${{ secrets.GITHUB_TOKEN }}

    # STEP 2: サブモジュールの更新とコミット
    - name: Update, Commit, and Push Submodules
      run: |
        # Gitの環境設定を調整して、予期せぬファイル変更を防ぎます
        echo "🔧 Configuring git to prevent unexpected file modifications..."
        # 1. 自動改行コード変換を無効化 (CRLF/LF問題の防止)
        git config --global core.autocrlf false
        # 2. 【最重要】ファイルの実行権限の変更を無視 (パーミッション問題の解決)
        git config --global core.filemode false

        # サブモジュールをリモートの最新に更新します
        echo "🔄 Updating submodules..."
        git submodule update --init --remote --recursive

        # 変更がない場合はここでスクリプトを終了します
        if [ -z "$(git status --porcelain)" ]; then
          echo "✅ No submodule changes to commit."
          exit 0
        fi

        echo "🔍 Submodule changes detected. Preparing to commit..."

        # Gitのユーザー情報を設定します
        git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"

        # 変更をステージングします
        echo "📝 Staging changes..."
        git add -A

        # ステージング後の状態を確認します
        echo "📊 Git status after staging:"
        git status

        # 変更をコミットします
        git commit -m "chore: Update submodules"

        # リモートリポジトリにプッシュします
        git push
